dnl $Id$
dnl -*-sh-mode-*-

AC_INIT(fetchaddr.c)

AC_MSG_CHECKING(for prefix)
if test x$prefix = xNONE; then
	lbdb_cv_prefix=$ac_default_prefix
else
	lbdb_cv_prefix=$prefix
fi
AC_MSG_RESULT($lbdb_cv_prefix)

AC_PROG_CC
AC_PROG_INSTALL

SH=NONE

dnl If we are runnin bash right now, BASH is set.
unset BASH

if test "x$SH" = xNONE ; then
	AC_PATH_PROG(BASH, bash, NONE, `echo $PATH | sed "s/:/ /g"`)
	if test ! "x$BASH" = xNONE ; then
		if $BASH -posix -c true ; then
			SH="$BASH -posix"
		elif $BASH --posix -c true ; then
			SH="$BASH --posix"
		fi
		echo "Using $SH".
	fi
fi

if test "x$SH" = xNONE ; then
	AC_PATH_PROG(KSH, ksh, NONE, `echo $PATH | sed "s/:/ /g"`)
	if test ! "x$KSH" = xNONE ; then
		SH="$KSH"
		echo "Using $SH".
	fi
fi

if test "x$SH" = xNONE ; then
	AC_PATH_PROG(BINSH, sh, NONE, `echo $PATH | sed "s/:/ /g"`)
	if test "x$BINSH" = xNONE; then
		echo "ERROR: Can't find sh." >&2
		exit 1
	else
		SH="$BINSH"
	fi
fi

AC_SUBST(SH)

AC_PATH_PROG(MAWK, mawk, NONE, `echo $PATH | sed "s/:/ /g"`)
AC_PATH_PROG(GAWK, gawk, NONE, `echo $PATH | sed "s/:/ /g"`)
AC_PATH_PROG(NAWK, nawk, NONE, `echo $PATH | sed "s/:/ /g"`)

if test "x$NAWK" != "xNONE" ; then
	AWK="$NAWK -f"
fi

if test "x$GAWK" != "xNONE" ; then
	AWK="$GAWK -f"
fi

if test "x$MAWK" != "xNONE" ; then
	AWK="$MAWK -f"
fi
		
AC_SUBST(AWK)

AC_PATH_PROG(DOTLOCK_OLD, mutt.dotlock, no, `echo $PATH | sed "s/:/ /g"` )
if test x$ac_cv_path_DOTLOCK_OLD = xno ; then
	AC_PATH_PROG(DOTLOCK, mutt_dotlock, no, `echo $PATH | sed "s/:/ /g"`)
else
	ac_cv_path_DOTLOCK=$ac_cv_path_DOTLOCK_OLD
fi

if test x$ac_cv_path_DOTLOCK = xno ; then
	echo "ERROR: mutt_dotlock is required to build this package." >&2
	echo "ERROR: You can get it from the mutt package's source code." >&2
	exit 1
fi


AC_DEFINE_UNQUOTED(DOTLOCK, "$ac_cv_path_DOTLOCK")
AC_SUBST(DOTLOCK)

path_fetchaddr="$libdir/fetchaddr"
AC_SUBST(path_fetchaddr)

MODULES="m_inmail m_passwd m_pgp2 m_pgp5 m_gpg"


AC_PATH_PROG(FINGER, finger, "no", `echo $PATH | sed "s/:/ /g"`)
if test "x$FINGER" != xno ; then
	MODULES="$MODULES m_finger"
	AC_SUBST(FINGER)
fi

AC_PATH_PROG(GPG, gpg, "no", `echo $PATH | sed "s/:/ /g"`)
if test "x$GPG" != xno ; then
	MODULES="$MODULES m_gpg"
	AC_SUBST(GPG)
fi

AC_PATH_PROG(PGPK, pgpk, "no", `echo $PATH | sed "s/:/ /g"`)
if test "x$PGPK" != xno ; then
	MODULES="$MODULES m_pgp5"
	AC_SUBST(PGPK)
fi

AC_PATH_PROG(PGP, pgp, "no", `echo $PATH | sed "s/:/ /g"`)
if test "x$PGP" != xno ; then
	MODULES="$MODULES m_pgp2"
	AC_SUBST(PGP)
fi

MODULES_SH=""
for i in $MODULES ; do
	MODULES_SH="$MODULES_SH $i.sh"
done

AC_SUBST(MODULES)
AC_OUTPUT(Makefile lbdbq.sh munge.awk lbdb-fetchaddr.sh lbdb_lib.sh $MODULES_SH)
